/* Generated by wayland-scanner 1.17.0 */

#ifndef LIRI_DECORATION_CLIENT_PROTOCOL_H
#define LIRI_DECORATION_CLIENT_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-client.h"

#ifdef  __cplusplus
extern "C" {
#endif

/**
 * @page page_liri_decoration The liri_decoration protocol
 * @section page_ifaces_liri_decoration Interfaces
 * - @subpage page_iface_liri_decoration_manager - server-side decoration integration
 * - @subpage page_iface_liri_decoration - server-side decoration interface
 * @section page_copyright_liri_decoration Copyright
 * <pre>
 *
 * Copyright (C) 2018 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation files
 * (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * </pre>
 */
struct liri_decoration;
struct liri_decoration_manager;
struct wl_surface;

/**
 * @page page_iface_liri_decoration_manager liri_decoration_manager
 * @section page_iface_liri_decoration_manager_desc Description
 *
 * This interface allows a client to alter the look of
 * server-side decorations.
 * @section page_iface_liri_decoration_manager_api API
 * See @ref iface_liri_decoration_manager.
 */
/**
 * @defgroup iface_liri_decoration_manager The liri_decoration_manager interface
 *
 * This interface allows a client to alter the look of
 * server-side decorations.
 */
extern const struct wl_interface liri_decoration_manager_interface;
/**
 * @page page_iface_liri_decoration liri_decoration
 * @section page_iface_liri_decoration_desc Description
 *
 * This interface allows a client to change the server-side decoration
 * background and foreground colors to match the primary color used
 * by the window.
 * @section page_iface_liri_decoration_api API
 * See @ref iface_liri_decoration.
 */
/**
 * @defgroup iface_liri_decoration The liri_decoration interface
 *
 * This interface allows a client to change the server-side decoration
 * background and foreground colors to match the primary color used
 * by the window.
 */
extern const struct wl_interface liri_decoration_interface;

#ifndef LIRI_DECORATION_MANAGER_ERROR_ENUM
#define LIRI_DECORATION_MANAGER_ERROR_ENUM
enum liri_decoration_manager_error {
	/**
	 * the surface already has a liri_decoration object associated
	 */
	LIRI_DECORATION_MANAGER_ERROR_ALREADY_EXISTS = 0,
};
#endif /* LIRI_DECORATION_MANAGER_ERROR_ENUM */

#define LIRI_DECORATION_MANAGER_CREATE 0
#define LIRI_DECORATION_MANAGER_DESTROY 1


/**
 * @ingroup iface_liri_decoration_manager
 */
#define LIRI_DECORATION_MANAGER_CREATE_SINCE_VERSION 1
/**
 * @ingroup iface_liri_decoration_manager
 */
#define LIRI_DECORATION_MANAGER_DESTROY_SINCE_VERSION 1

/** @ingroup iface_liri_decoration_manager */
static inline void
liri_decoration_manager_set_user_data(struct liri_decoration_manager *liri_decoration_manager, void *user_data)
{
	wl_proxy_set_user_data((struct wl_proxy *) liri_decoration_manager, user_data);
}

/** @ingroup iface_liri_decoration_manager */
static inline void *
liri_decoration_manager_get_user_data(struct liri_decoration_manager *liri_decoration_manager)
{
	return wl_proxy_get_user_data((struct wl_proxy *) liri_decoration_manager);
}

static inline uint32_t
liri_decoration_manager_get_version(struct liri_decoration_manager *liri_decoration_manager)
{
	return wl_proxy_get_version((struct wl_proxy *) liri_decoration_manager);
}

/**
 * @ingroup iface_liri_decoration_manager
 *
 * Instantiate an interface extention for the given wl_surface to
 * change the server-side decoration background and foreground
 * colors.
 *
 * If a liri_decoration object has already been associated with this
 * surface, the compositor will post an error.
 */
static inline struct liri_decoration *
liri_decoration_manager_create(struct liri_decoration_manager *liri_decoration_manager, struct wl_surface *surface)
{
	struct wl_proxy *id;

	id = wl_proxy_marshal_constructor((struct wl_proxy *) liri_decoration_manager,
			 LIRI_DECORATION_MANAGER_CREATE, &liri_decoration_interface, NULL, surface);

	return (struct liri_decoration *) id;
}

/**
 * @ingroup iface_liri_decoration_manager
 *
 * This destroys the liri_decoration_manager object.
 * It must be called after all liri_decoration objects are freed.
 * The compositor is not forced to revert the colors back
 * to the original ones.
 */
static inline void
liri_decoration_manager_destroy(struct liri_decoration_manager *liri_decoration_manager)
{
	wl_proxy_marshal((struct wl_proxy *) liri_decoration_manager,
			 LIRI_DECORATION_MANAGER_DESTROY);

	wl_proxy_destroy((struct wl_proxy *) liri_decoration_manager);
}

#define LIRI_DECORATION_SET_FOREGROUND 0
#define LIRI_DECORATION_SET_BACKGROUND 1
#define LIRI_DECORATION_DESTROY 2


/**
 * @ingroup iface_liri_decoration
 */
#define LIRI_DECORATION_SET_FOREGROUND_SINCE_VERSION 1
/**
 * @ingroup iface_liri_decoration
 */
#define LIRI_DECORATION_SET_BACKGROUND_SINCE_VERSION 1
/**
 * @ingroup iface_liri_decoration
 */
#define LIRI_DECORATION_DESTROY_SINCE_VERSION 1

/** @ingroup iface_liri_decoration */
static inline void
liri_decoration_set_user_data(struct liri_decoration *liri_decoration, void *user_data)
{
	wl_proxy_set_user_data((struct wl_proxy *) liri_decoration, user_data);
}

/** @ingroup iface_liri_decoration */
static inline void *
liri_decoration_get_user_data(struct liri_decoration *liri_decoration)
{
	return wl_proxy_get_user_data((struct wl_proxy *) liri_decoration);
}

static inline uint32_t
liri_decoration_get_version(struct liri_decoration *liri_decoration)
{
	return wl_proxy_get_version((struct wl_proxy *) liri_decoration);
}

/**
 * @ingroup iface_liri_decoration
 *
 * Change the server-side decoration foreground color
 * in hex color code (for example #ffffff for white).
 */
static inline void
liri_decoration_set_foreground(struct liri_decoration *liri_decoration, const char *color)
{
	wl_proxy_marshal((struct wl_proxy *) liri_decoration,
			 LIRI_DECORATION_SET_FOREGROUND, color);
}

/**
 * @ingroup iface_liri_decoration
 *
 * Change the server-side decoration background color
 * in hex color code (for example #ffffff for white).
 */
static inline void
liri_decoration_set_background(struct liri_decoration *liri_decoration, const char *color)
{
	wl_proxy_marshal((struct wl_proxy *) liri_decoration,
			 LIRI_DECORATION_SET_BACKGROUND, color);
}

/**
 * @ingroup iface_liri_decoration
 *
 * This destroys the liri_decoration object.
 * The compositor is not forced to revert the colors back
 * to the original ones.
 */
static inline void
liri_decoration_destroy(struct liri_decoration *liri_decoration)
{
	wl_proxy_marshal((struct wl_proxy *) liri_decoration,
			 LIRI_DECORATION_DESTROY);

	wl_proxy_destroy((struct wl_proxy *) liri_decoration);
}

#ifdef  __cplusplus
}
#endif

#endif
